
// Generated by Cadence Genus(TM) Synthesis Solution 21.15-s080_1
// Generated on: Aug 11 2024 19:22:15 UTC (Aug 11 2024 19:22:15 UTC)

// Verification Directory fv/proj_extender 

module add_unsigned(A, B, Z);
  input [2:0] A;
  input B;
  output [2:0] Z;
  wire [2:0] A;
  wire B;
  wire [2:0] Z;
  wire n_8, n_12, n_15, n_17, n_21, n_23;
  xor g1 (Z[0], A[0], B);
  nand g2 (n_8, A[0], B);
  nand g11 (n_15, n_12, A[1]);
  xnor g17 (Z[1], n_12, n_21);
  xnor g19 (Z[2], n_17, n_23);
  not g23 (n_12, n_8);
  not g24 (n_21, A[1]);
  not g25 (n_23, A[2]);
  not g26 (n_17, n_15);
endmodule

module add_unsigned_2(A, B, Z);
  input [4:0] A;
  input B;
  output [4:0] Z;
  wire [4:0] A;
  wire B;
  wire [4:0] Z;
  wire n_12, n_16, n_19, n_21, n_25, n_26, n_28, n_29;
  wire n_31, n_33, n_37, n_42, n_45;
  xor g1 (Z[0], A[0], B);
  nand g2 (n_12, A[0], B);
  nand g15 (n_19, n_16, A[1]);
  nor g20 (n_29, n_25, n_21);
  nand g22 (n_28, n_26, A[2]);
  nand g24 (n_31, n_29, n_26);
  xnor g30 (Z[1], n_16, n_37);
  xnor g32 (Z[2], n_26, n_25);
  xnor g35 (Z[3], n_42, n_21);
  xnor g37 (Z[4], n_33, n_45);
  not g40 (n_25, A[2]);
  not g41 (n_21, A[3]);
  not g43 (n_16, n_12);
  not g44 (n_37, A[1]);
  not g45 (n_45, A[4]);
  not g46 (n_26, n_19);
  not g47 (n_42, n_28);
  not g48 (n_33, n_31);
endmodule

module sub_unsigned(A, B, Z);
  input [9:0] A;
  input [3:0] B;
  output [9:0] Z;
  wire [9:0] A;
  wire [3:0] B;
  wire [9:0] Z;
  wire n_25, n_26, n_28, n_29, n_32, n_35, n_38, n_41;
  wire n_45, n_47, n_48, n_49, n_50, n_51, n_52, n_53;
  wire n_54, n_55, n_56, n_57, n_58, n_59, n_60, n_61;
  wire n_62, n_63, n_66, n_68, n_69, n_71, n_75, n_79;
  wire n_81, n_83, n_87, n_89, n_91, n_92, n_93, n_98;
  wire n_101, n_105, n_111, n_114;
  not g8 (n_32, B[3]);
  not g9 (n_35, B[2]);
  not g10 (n_38, B[1]);
  not g11 (n_41, B[0]);
  xor g1 (n_114, A[0], n_41);
  nand g4 (n_25, n_45, B[0]);
  nor g5 (n_47, A[1], n_38);
  nand g6 (n_48, A[1], n_38);
  nor g7 (n_53, A[2], n_35);
  nand g13 (n_29, A[2], n_35);
  nor g14 (n_49, A[3], n_32);
  nand g15 (n_50, A[3], n_32);
  not g23 (n_26, n_47);
  nand g24 (n_28, n_25, n_26);
  nand g25 (n_56, n_48, n_28);
  nor g26 (n_51, n_29, n_49);
  not g27 (n_52, n_50);
  nor g28 (n_60, n_51, n_52);
  nor g29 (n_59, n_53, n_49);
  nor g32 (n_62, A[4], A[5]);
  nor g36 (n_66, A[6], A[7]);
  not g42 (n_57, n_53);
  nand g43 (n_58, n_56, n_57);
  nand g44 (n_92, n_29, n_58);
  nand g45 (n_61, n_59, n_56);
  nand g46 (n_69, n_60, n_61);
  nor g49 (n_75, n_63, A[6]);
  not g54 (n_68, n_66);
  nor g55 (n_79, n_63, n_68);
  nand g59 (n_98, n_54, n_71);
  nand g61 (n_101, n_62, n_71);
  nand g64 (n_105, n_75, n_71);
  nand g67 (n_81, n_79, n_71);
  nand g70 (n_111, n_55, n_83);
  nand g73 (n_87, n_26, n_48);
  xnor g74 (Z[1], n_25, n_87);
  nand g75 (n_89, n_57, n_29);
  xnor g76 (Z[2], n_56, n_89);
  not g77 (n_91, n_49);
  nand g78 (n_93, n_91, n_50);
  xnor g79 (Z[3], n_92, n_93);
  xnor g81 (Z[4], n_69, A[4]);
  xnor g84 (Z[5], n_98, A[5]);
  xnor g86 (Z[6], n_101, A[6]);
  xnor g89 (Z[7], n_105, A[7]);
  xnor g91 (Z[8], n_81, A[8]);
  xnor g94 (Z[9], n_111, A[9]);
  not g96 (n_45, A[0]);
  not g98 (n_54, A[4]);
  not g102 (n_55, A[8]);
  not g104 (Z[0], n_114);
  not g105 (n_63, n_62);
  not g106 (n_71, n_69);
  not g107 (n_83, n_81);
endmodule

module bmux(ctl, in_0, in_1, z);
  input ctl, in_0, in_1;
  output z;
  wire ctl, in_0, in_1;
  wire z;
  CDN_bmux2 g1(.sel0 (ctl), .data0 (in_0), .data1 (in_1), .z (z));
endmodule

module bmux_3(ctl, in_0, in_1, z);
  input ctl;
  input [4:0] in_0, in_1;
  output [4:0] z;
  wire ctl;
  wire [4:0] in_0, in_1;
  wire [4:0] z;
  CDN_bmux2 g1(.sel0 (ctl), .data0 (in_0[4]), .data1 (in_1[4]), .z
       (z[4]));
  CDN_bmux2 g2(.sel0 (ctl), .data0 (in_0[3]), .data1 (in_1[3]), .z
       (z[3]));
  CDN_bmux2 g3(.sel0 (ctl), .data0 (in_0[2]), .data1 (in_1[2]), .z
       (z[2]));
  CDN_bmux2 g4(.sel0 (ctl), .data0 (in_0[1]), .data1 (in_1[1]), .z
       (z[1]));
  CDN_bmux2 g5(.sel0 (ctl), .data0 (in_0[0]), .data1 (in_1[0]), .z
       (z[0]));
endmodule

module bmux_5(ctl, in_0, in_1, in_2, in_3, in_4, in_5, in_6, in_7, z);
  input [2:0] ctl;
  input [3:0] in_0, in_1, in_2, in_3, in_4, in_5, in_6, in_7;
  output [3:0] z;
  wire [2:0] ctl;
  wire [3:0] in_0, in_1, in_2, in_3, in_4, in_5, in_6, in_7;
  wire [3:0] z;
  CDN_bmux8 g1(.sel0 (ctl[0]), .data0 (in_0[3]), .data1 (in_1[3]),
       .sel1 (ctl[1]), .data2 (in_2[3]), .data3 (in_3[3]), .sel2
       (ctl[2]), .data4 (in_4[3]), .data5 (in_5[3]), .data6 (in_6[3]),
       .data7 (in_7[3]), .z (z[3]));
  CDN_bmux8 g2(.sel0 (ctl[0]), .data0 (in_0[2]), .data1 (in_1[2]),
       .sel1 (ctl[1]), .data2 (in_2[2]), .data3 (in_3[2]), .sel2
       (ctl[2]), .data4 (in_4[2]), .data5 (in_5[2]), .data6 (in_6[2]),
       .data7 (in_7[2]), .z (z[2]));
  CDN_bmux8 g3(.sel0 (ctl[0]), .data0 (in_0[1]), .data1 (in_1[1]),
       .sel1 (ctl[1]), .data2 (in_2[1]), .data3 (in_3[1]), .sel2
       (ctl[2]), .data4 (in_4[1]), .data5 (in_5[1]), .data6 (in_6[1]),
       .data7 (in_7[1]), .z (z[1]));
  CDN_bmux8 g4(.sel0 (ctl[0]), .data0 (in_0[0]), .data1 (in_1[0]),
       .sel1 (ctl[1]), .data2 (in_2[0]), .data3 (in_3[0]), .sel2
       (ctl[2]), .data4 (in_4[0]), .data5 (in_5[0]), .data6 (in_6[0]),
       .data7 (in_7[0]), .z (z[0]));
endmodule

module case_box(in_0, out_0);
  input [1:0] in_0;
  output [3:0] out_0;
  wire [1:0] in_0;
  wire [3:0] out_0;
  wire n_9, n_15, n_23, n_24, n_25, n_26;
  nand g1 (n_9, n_23, n_24);
  nand g2 (n_25, in_0[0], n_24);
  nand g3 (n_26, n_23, in_0[1]);
  nand g4 (n_15, in_0[0], in_0[1]);
  not g5 (out_0[3], n_9);
  not g6 (out_0[2], n_25);
  not g7 (out_0[1], n_26);
  not g8 (out_0[0], n_15);
  not g11 (n_24, in_0[1]);
  not g12 (n_23, in_0[0]);
endmodule

module mux(ctl, in_0, in_1, in_2, in_3, z);
  input [3:0] ctl, in_0, in_1, in_2, in_3;
  output [3:0] z;
  wire [3:0] ctl, in_0, in_1, in_2, in_3;
  wire [3:0] z;
  CDN_mux4 g1(.sel0 (ctl[3]), .data0 (in_0[3]), .sel1 (ctl[2]), .data1
       (in_1[3]), .sel2 (ctl[1]), .data2 (in_2[3]), .sel3 (ctl[0]),
       .data3 (in_3[3]), .z (z[3]));
  CDN_mux4 g2(.sel0 (ctl[3]), .data0 (in_0[2]), .sel1 (ctl[2]), .data1
       (in_1[2]), .sel2 (ctl[1]), .data2 (in_2[2]), .sel3 (ctl[0]),
       .data3 (in_3[2]), .z (z[2]));
  CDN_mux4 g3(.sel0 (ctl[3]), .data0 (in_0[1]), .sel1 (ctl[2]), .data1
       (in_1[1]), .sel2 (ctl[1]), .data2 (in_2[1]), .sel3 (ctl[0]),
       .data3 (in_3[1]), .z (z[1]));
  CDN_mux4 g4(.sel0 (ctl[3]), .data0 (in_0[0]), .sel1 (ctl[2]), .data1
       (in_1[0]), .sel2 (ctl[1]), .data2 (in_2[0]), .sel3 (ctl[0]),
       .data3 (in_3[0]), .z (z[0]));
endmodule

module case_box_32(in_0, out_0);
  input [1:0] in_0;
  output [3:0] out_0;
  wire [1:0] in_0;
  wire [3:0] out_0;
  wire n_9, n_15, n_23, n_24, n_25, n_26;
  nand g1 (n_9, n_23, n_24);
  nand g2 (n_25, in_0[0], n_24);
  nand g3 (n_26, n_23, in_0[1]);
  nand g4 (n_15, in_0[0], in_0[1]);
  not g5 (out_0[3], n_9);
  not g6 (out_0[2], n_25);
  not g7 (out_0[1], n_26);
  not g8 (out_0[0], n_15);
  not g11 (n_24, in_0[1]);
  not g12 (n_23, in_0[0]);
endmodule

module bmux_7(ctl, in_0, in_1, in_2, in_3, in_4, in_5, in_6, in_7,
     in_8, in_9, in_10, in_11, in_12, in_13, in_14, in_15, in_16,
     in_17, in_18, in_19, in_20, in_21, in_22, in_23, in_24, in_25,
     in_26, in_27, in_28, in_29, in_30, in_31, z);
  input [4:0] ctl;
  input [8:0] in_0, in_1, in_2, in_3, in_4, in_5, in_6, in_7, in_8,
       in_9, in_10, in_11, in_12, in_13, in_14, in_15, in_16, in_17,
       in_18, in_19, in_20, in_21, in_22, in_23, in_24, in_25, in_26,
       in_27, in_28, in_29, in_30, in_31;
  output [8:0] z;
  wire [4:0] ctl;
  wire [8:0] in_0, in_1, in_2, in_3, in_4, in_5, in_6, in_7, in_8,
       in_9, in_10, in_11, in_12, in_13, in_14, in_15, in_16, in_17,
       in_18, in_19, in_20, in_21, in_22, in_23, in_24, in_25, in_26,
       in_27, in_28, in_29, in_30, in_31;
  wire [8:0] z;
  CDN_bmux32 g1(.sel0 (ctl[0]), .data0 (in_0[8]), .data1 (in_1[8]),
       .sel1 (ctl[1]), .data2 (in_2[8]), .data3 (in_3[8]), .sel2
       (ctl[2]), .data4 (in_4[8]), .data5 (in_5[8]), .data6 (in_6[8]),
       .data7 (in_7[8]), .sel3 (ctl[3]), .data8 (in_8[8]), .data9
       (in_9[8]), .data10 (in_10[8]), .data11 (in_11[8]), .data12
       (in_12[8]), .data13 (in_13[8]), .data14 (in_14[8]), .data15
       (in_15[8]), .sel4 (ctl[4]), .data16 (in_16[8]), .data17
       (in_17[8]), .data18 (in_18[8]), .data19 (in_19[8]), .data20
       (in_20[8]), .data21 (in_21[8]), .data22 (in_22[8]), .data23
       (in_23[8]), .data24 (in_24[8]), .data25 (in_25[8]), .data26
       (in_26[8]), .data27 (in_27[8]), .data28 (in_28[8]), .data29
       (in_29[8]), .data30 (in_30[8]), .data31 (in_31[8]), .z (z[8]));
  CDN_bmux32 g2(.sel0 (ctl[0]), .data0 (in_0[7]), .data1 (in_1[7]),
       .sel1 (ctl[1]), .data2 (in_2[7]), .data3 (in_3[7]), .sel2
       (ctl[2]), .data4 (in_4[7]), .data5 (in_5[7]), .data6 (in_6[7]),
       .data7 (in_7[7]), .sel3 (ctl[3]), .data8 (in_8[7]), .data9
       (in_9[7]), .data10 (in_10[7]), .data11 (in_11[7]), .data12
       (in_12[7]), .data13 (in_13[7]), .data14 (in_14[7]), .data15
       (in_15[7]), .sel4 (ctl[4]), .data16 (in_16[7]), .data17
       (in_17[7]), .data18 (in_18[7]), .data19 (in_19[7]), .data20
       (in_20[7]), .data21 (in_21[7]), .data22 (in_22[7]), .data23
       (in_23[7]), .data24 (in_24[7]), .data25 (in_25[7]), .data26
       (in_26[7]), .data27 (in_27[7]), .data28 (in_28[7]), .data29
       (in_29[7]), .data30 (in_30[7]), .data31 (in_31[7]), .z (z[7]));
  CDN_bmux32 g3(.sel0 (ctl[0]), .data0 (in_0[6]), .data1 (in_1[6]),
       .sel1 (ctl[1]), .data2 (in_2[6]), .data3 (in_3[6]), .sel2
       (ctl[2]), .data4 (in_4[6]), .data5 (in_5[6]), .data6 (in_6[6]),
       .data7 (in_7[6]), .sel3 (ctl[3]), .data8 (in_8[6]), .data9
       (in_9[6]), .data10 (in_10[6]), .data11 (in_11[6]), .data12
       (in_12[6]), .data13 (in_13[6]), .data14 (in_14[6]), .data15
       (in_15[6]), .sel4 (ctl[4]), .data16 (in_16[6]), .data17
       (in_17[6]), .data18 (in_18[6]), .data19 (in_19[6]), .data20
       (in_20[6]), .data21 (in_21[6]), .data22 (in_22[6]), .data23
       (in_23[6]), .data24 (in_24[6]), .data25 (in_25[6]), .data26
       (in_26[6]), .data27 (in_27[6]), .data28 (in_28[6]), .data29
       (in_29[6]), .data30 (in_30[6]), .data31 (in_31[6]), .z (z[6]));
  CDN_bmux32 g4(.sel0 (ctl[0]), .data0 (in_0[5]), .data1 (in_1[5]),
       .sel1 (ctl[1]), .data2 (in_2[5]), .data3 (in_3[5]), .sel2
       (ctl[2]), .data4 (in_4[5]), .data5 (in_5[5]), .data6 (in_6[5]),
       .data7 (in_7[5]), .sel3 (ctl[3]), .data8 (in_8[5]), .data9
       (in_9[5]), .data10 (in_10[5]), .data11 (in_11[5]), .data12
       (in_12[5]), .data13 (in_13[5]), .data14 (in_14[5]), .data15
       (in_15[5]), .sel4 (ctl[4]), .data16 (in_16[5]), .data17
       (in_17[5]), .data18 (in_18[5]), .data19 (in_19[5]), .data20
       (in_20[5]), .data21 (in_21[5]), .data22 (in_22[5]), .data23
       (in_23[5]), .data24 (in_24[5]), .data25 (in_25[5]), .data26
       (in_26[5]), .data27 (in_27[5]), .data28 (in_28[5]), .data29
       (in_29[5]), .data30 (in_30[5]), .data31 (in_31[5]), .z (z[5]));
  CDN_bmux32 g5(.sel0 (ctl[0]), .data0 (in_0[4]), .data1 (in_1[4]),
       .sel1 (ctl[1]), .data2 (in_2[4]), .data3 (in_3[4]), .sel2
       (ctl[2]), .data4 (in_4[4]), .data5 (in_5[4]), .data6 (in_6[4]),
       .data7 (in_7[4]), .sel3 (ctl[3]), .data8 (in_8[4]), .data9
       (in_9[4]), .data10 (in_10[4]), .data11 (in_11[4]), .data12
       (in_12[4]), .data13 (in_13[4]), .data14 (in_14[4]), .data15
       (in_15[4]), .sel4 (ctl[4]), .data16 (in_16[4]), .data17
       (in_17[4]), .data18 (in_18[4]), .data19 (in_19[4]), .data20
       (in_20[4]), .data21 (in_21[4]), .data22 (in_22[4]), .data23
       (in_23[4]), .data24 (in_24[4]), .data25 (in_25[4]), .data26
       (in_26[4]), .data27 (in_27[4]), .data28 (in_28[4]), .data29
       (in_29[4]), .data30 (in_30[4]), .data31 (in_31[4]), .z (z[4]));
  CDN_bmux32 g6(.sel0 (ctl[0]), .data0 (in_0[3]), .data1 (in_1[3]),
       .sel1 (ctl[1]), .data2 (in_2[3]), .data3 (in_3[3]), .sel2
       (ctl[2]), .data4 (in_4[3]), .data5 (in_5[3]), .data6 (in_6[3]),
       .data7 (in_7[3]), .sel3 (ctl[3]), .data8 (in_8[3]), .data9
       (in_9[3]), .data10 (in_10[3]), .data11 (in_11[3]), .data12
       (in_12[3]), .data13 (in_13[3]), .data14 (in_14[3]), .data15
       (in_15[3]), .sel4 (ctl[4]), .data16 (in_16[3]), .data17
       (in_17[3]), .data18 (in_18[3]), .data19 (in_19[3]), .data20
       (in_20[3]), .data21 (in_21[3]), .data22 (in_22[3]), .data23
       (in_23[3]), .data24 (in_24[3]), .data25 (in_25[3]), .data26
       (in_26[3]), .data27 (in_27[3]), .data28 (in_28[3]), .data29
       (in_29[3]), .data30 (in_30[3]), .data31 (in_31[3]), .z (z[3]));
  CDN_bmux32 g7(.sel0 (ctl[0]), .data0 (in_0[2]), .data1 (in_1[2]),
       .sel1 (ctl[1]), .data2 (in_2[2]), .data3 (in_3[2]), .sel2
       (ctl[2]), .data4 (in_4[2]), .data5 (in_5[2]), .data6 (in_6[2]),
       .data7 (in_7[2]), .sel3 (ctl[3]), .data8 (in_8[2]), .data9
       (in_9[2]), .data10 (in_10[2]), .data11 (in_11[2]), .data12
       (in_12[2]), .data13 (in_13[2]), .data14 (in_14[2]), .data15
       (in_15[2]), .sel4 (ctl[4]), .data16 (in_16[2]), .data17
       (in_17[2]), .data18 (in_18[2]), .data19 (in_19[2]), .data20
       (in_20[2]), .data21 (in_21[2]), .data22 (in_22[2]), .data23
       (in_23[2]), .data24 (in_24[2]), .data25 (in_25[2]), .data26
       (in_26[2]), .data27 (in_27[2]), .data28 (in_28[2]), .data29
       (in_29[2]), .data30 (in_30[2]), .data31 (in_31[2]), .z (z[2]));
  CDN_bmux32 g8(.sel0 (ctl[0]), .data0 (in_0[1]), .data1 (in_1[1]),
       .sel1 (ctl[1]), .data2 (in_2[1]), .data3 (in_3[1]), .sel2
       (ctl[2]), .data4 (in_4[1]), .data5 (in_5[1]), .data6 (in_6[1]),
       .data7 (in_7[1]), .sel3 (ctl[3]), .data8 (in_8[1]), .data9
       (in_9[1]), .data10 (in_10[1]), .data11 (in_11[1]), .data12
       (in_12[1]), .data13 (in_13[1]), .data14 (in_14[1]), .data15
       (in_15[1]), .sel4 (ctl[4]), .data16 (in_16[1]), .data17
       (in_17[1]), .data18 (in_18[1]), .data19 (in_19[1]), .data20
       (in_20[1]), .data21 (in_21[1]), .data22 (in_22[1]), .data23
       (in_23[1]), .data24 (in_24[1]), .data25 (in_25[1]), .data26
       (in_26[1]), .data27 (in_27[1]), .data28 (in_28[1]), .data29
       (in_29[1]), .data30 (in_30[1]), .data31 (in_31[1]), .z (z[1]));
  CDN_bmux32 g9(.sel0 (ctl[0]), .data0 (in_0[0]), .data1 (in_1[0]),
       .sel1 (ctl[1]), .data2 (in_2[0]), .data3 (in_3[0]), .sel2
       (ctl[2]), .data4 (in_4[0]), .data5 (in_5[0]), .data6 (in_6[0]),
       .data7 (in_7[0]), .sel3 (ctl[3]), .data8 (in_8[0]), .data9
       (in_9[0]), .data10 (in_10[0]), .data11 (in_11[0]), .data12
       (in_12[0]), .data13 (in_13[0]), .data14 (in_14[0]), .data15
       (in_15[0]), .sel4 (ctl[4]), .data16 (in_16[0]), .data17
       (in_17[0]), .data18 (in_18[0]), .data19 (in_19[0]), .data20
       (in_20[0]), .data21 (in_21[0]), .data22 (in_22[0]), .data23
       (in_23[0]), .data24 (in_24[0]), .data25 (in_25[0]), .data26
       (in_26[0]), .data27 (in_27[0]), .data28 (in_28[0]), .data29
       (in_29[0]), .data30 (in_30[0]), .data31 (in_31[0]), .z (z[0]));
endmodule

module proj_extender(in_fragment, \in_kmer_indices[0] ,
     \in_kmer_indices[1] , \in_kmer_indices[2] , \in_kmer_indices[3] ,
     \in_kmer_indices[4] , \in_kmer_indices[5] , \in_kmer_indices[6] ,
     \in_kmer_indices[7] , \in_kmer_indices[8] , \in_kmer_indices[9] ,
     \in_kmer_indices[10] , \in_kmer_indices[11] , \in_kmer_indices[12]
     , \in_kmer_indices[13] , \in_kmer_indices[14] ,
     \in_kmer_indices[15] , \in_kmer_indices[16] , \in_kmer_indices[17]
     , \in_kmer_indices[18] , \in_kmer_indices[19] ,
     \in_kmer_indices[20] , \in_kmer_indices[21] , \in_kmer_indices[22]
     , \in_kmer_indices[23] , \in_kmer_indices[24] ,
     \in_kmer_indices[25] , \in_kmer_indices[26] , \in_kmer_indices[27]
     , \in_kmer_indices[28] , \in_kmer_indices[29] ,
     \in_kmer_indices[30] , \in_kmer_indices[31] , valid_indices,
     rst_n, clk, out_index, out_gfm);
  input [63:0] in_fragment;
  input [8:0] \in_kmer_indices[0] , \in_kmer_indices[1] ,
       \in_kmer_indices[2] , \in_kmer_indices[3] , \in_kmer_indices[4]
       , \in_kmer_indices[5] , \in_kmer_indices[6] ,
       \in_kmer_indices[7] , \in_kmer_indices[8] , \in_kmer_indices[9]
       , \in_kmer_indices[10] , \in_kmer_indices[11] ,
       \in_kmer_indices[12] , \in_kmer_indices[13] ,
       \in_kmer_indices[14] , \in_kmer_indices[15] ,
       \in_kmer_indices[16] , \in_kmer_indices[17] ,
       \in_kmer_indices[18] , \in_kmer_indices[19] ,
       \in_kmer_indices[20] , \in_kmer_indices[21] ,
       \in_kmer_indices[22] , \in_kmer_indices[23] ,
       \in_kmer_indices[24] , \in_kmer_indices[25] ,
       \in_kmer_indices[26] , \in_kmer_indices[27] ,
       \in_kmer_indices[28] , \in_kmer_indices[29] ,
       \in_kmer_indices[30] , \in_kmer_indices[31] ;
  input valid_indices, rst_n, clk;
  output [9:0] out_index;
  output [7:0] out_gfm;
  wire [63:0] in_fragment;
  wire [8:0] \in_kmer_indices[0] , \in_kmer_indices[1] ,
       \in_kmer_indices[2] , \in_kmer_indices[3] , \in_kmer_indices[4]
       , \in_kmer_indices[5] , \in_kmer_indices[6] ,
       \in_kmer_indices[7] , \in_kmer_indices[8] , \in_kmer_indices[9]
       , \in_kmer_indices[10] , \in_kmer_indices[11] ,
       \in_kmer_indices[12] , \in_kmer_indices[13] ,
       \in_kmer_indices[14] , \in_kmer_indices[15] ,
       \in_kmer_indices[16] , \in_kmer_indices[17] ,
       \in_kmer_indices[18] , \in_kmer_indices[19] ,
       \in_kmer_indices[20] , \in_kmer_indices[21] ,
       \in_kmer_indices[22] , \in_kmer_indices[23] ,
       \in_kmer_indices[24] , \in_kmer_indices[25] ,
       \in_kmer_indices[26] , \in_kmer_indices[27] ,
       \in_kmer_indices[28] , \in_kmer_indices[29] ,
       \in_kmer_indices[30] , \in_kmer_indices[31] ;
  wire valid_indices, rst_n, clk;
  wire [9:0] out_index;
  wire [7:0] out_gfm;
  wire [2:0] frag_parts_idx;
  wire [4:0] indices_idx;
  wire [8:0] curr_index;
  wire [4:0] indices_idx_next;
  wire [3:0] frag_part;
  wire [8:0] \in_kmer_indices_r[0] ;
  wire [8:0] \in_kmer_indices_r[1] ;
  wire [8:0] \in_kmer_indices_r[2] ;
  wire [8:0] \in_kmer_indices_r[3] ;
  wire [8:0] \in_kmer_indices_r[4] ;
  wire [8:0] \in_kmer_indices_r[5] ;
  wire [8:0] \in_kmer_indices_r[6] ;
  wire [8:0] \in_kmer_indices_r[7] ;
  wire [8:0] \in_kmer_indices_r[8] ;
  wire [8:0] \in_kmer_indices_r[9] ;
  wire [8:0] \in_kmer_indices_r[10] ;
  wire [8:0] \in_kmer_indices_r[11] ;
  wire [8:0] \in_kmer_indices_r[12] ;
  wire [8:0] \in_kmer_indices_r[13] ;
  wire [8:0] \in_kmer_indices_r[14] ;
  wire [8:0] \in_kmer_indices_r[15] ;
  wire [8:0] \in_kmer_indices_r[16] ;
  wire [8:0] \in_kmer_indices_r[17] ;
  wire [8:0] \in_kmer_indices_r[18] ;
  wire [8:0] \in_kmer_indices_r[19] ;
  wire [8:0] \in_kmer_indices_r[20] ;
  wire [8:0] \in_kmer_indices_r[21] ;
  wire [8:0] \in_kmer_indices_r[22] ;
  wire [8:0] \in_kmer_indices_r[23] ;
  wire [8:0] \in_kmer_indices_r[24] ;
  wire [8:0] \in_kmer_indices_r[25] ;
  wire [8:0] \in_kmer_indices_r[26] ;
  wire [8:0] \in_kmer_indices_r[27] ;
  wire [8:0] \in_kmer_indices_r[28] ;
  wire [8:0] \in_kmer_indices_r[29] ;
  wire [8:0] \in_kmer_indices_r[30] ;
  wire [8:0] \in_kmer_indices_r[31] ;
  wire n_56, n_57, n_58, n_59, n_60, n_61, n_62, n_96;
  wire n_97, n_98, n_99, n_100, n_101, n_102, n_103, n_104;
  wire n_105, n_106, n_1010, rst_frag_parts_idx;
  add_unsigned add_49_77(.A (frag_parts_idx), .B (1'b1), .Z ({n_106,
       n_105, n_104}));
  add_unsigned_2 add_70_64(.A (indices_idx), .B (1'b1), .Z ({n_62,
       n_61, n_60, n_59, n_58}));
  sub_unsigned sub_72_43(.A ({1'b0, curr_index}), .B (4'b1000), .Z
       (out_index));
  bmux mux_47_49(.ctl (n_57), .in_0 (1'b0), .in_1 (1'b1), .z
       (rst_frag_parts_idx));
  bmux_3 mux_70_31(.ctl (rst_frag_parts_idx), .in_0 (indices_idx),
       .in_1 ({n_62, n_61, n_60, n_59, n_58}), .z (indices_idx_next));
  bmux_5 mux_in_fragment_53_24(.ctl (frag_parts_idx), .in_0
       (in_fragment[3:0]), .in_1 (in_fragment[7:4]), .in_2
       (in_fragment[11:8]), .in_3 (in_fragment[15:12]), .in_4
       (in_fragment[19:16]), .in_5 (in_fragment[23:20]), .in_6
       (in_fragment[27:24]), .in_7 (in_fragment[31:28]), .z
       (frag_part));
  case_box ctl_frag_part_58_23(.in_0 (frag_part[1:0]), .out_0 ({n_96,
       n_97, n_98, n_99}));
  mux mux_out_gfm_58_23(.ctl ({n_96, n_97, n_98, n_99}), .in_0 (4'b1),
       .in_1 (4'b10), .in_2 (4'b100), .in_3 (4'b1000), .z
       (out_gfm[3:0]));
  case_box_32 ctl_frag_part_58_40(.in_0 (frag_part[3:2]), .out_0
       ({n_100, n_101, n_102, n_103}));
  mux mux_out_gfm_58_41(.ctl ({n_100, n_101, n_102, n_103}), .in_0
       (4'b1), .in_1 (4'b10), .in_2 (4'b100), .in_3 (4'b1000), .z
       (out_gfm[7:4]));
  bmux_7 \mux_in_kmer_indices_r[indices_idx]_51_25 (.ctl (indices_idx),
       .in_0 (\in_kmer_indices_r[0] ), .in_1 (\in_kmer_indices_r[1] ),
       .in_2 (\in_kmer_indices_r[2] ), .in_3 (\in_kmer_indices_r[3] ),
       .in_4 (\in_kmer_indices_r[4] ), .in_5 (\in_kmer_indices_r[5] ),
       .in_6 (\in_kmer_indices_r[6] ), .in_7 (\in_kmer_indices_r[7] ),
       .in_8 (\in_kmer_indices_r[8] ), .in_9 (\in_kmer_indices_r[9] ),
       .in_10 (\in_kmer_indices_r[10] ), .in_11 (\in_kmer_indices_r[11]
       ), .in_12 (\in_kmer_indices_r[12] ), .in_13
       (\in_kmer_indices_r[13] ), .in_14 (\in_kmer_indices_r[14] ),
       .in_15 (\in_kmer_indices_r[15] ), .in_16 (\in_kmer_indices_r[16]
       ), .in_17 (\in_kmer_indices_r[17] ), .in_18
       (\in_kmer_indices_r[18] ), .in_19 (\in_kmer_indices_r[19] ),
       .in_20 (\in_kmer_indices_r[20] ), .in_21 (\in_kmer_indices_r[21]
       ), .in_22 (\in_kmer_indices_r[22] ), .in_23
       (\in_kmer_indices_r[23] ), .in_24 (\in_kmer_indices_r[24] ),
       .in_25 (\in_kmer_indices_r[25] ), .in_26 (\in_kmer_indices_r[26]
       ), .in_27 (\in_kmer_indices_r[27] ), .in_28
       (\in_kmer_indices_r[28] ), .in_29 (\in_kmer_indices_r[29] ),
       .in_30 (\in_kmer_indices_r[30] ), .in_31 (\in_kmer_indices_r[31]
       ), .z (curr_index));
  not g1 (n_56, rst_n);
  CDN_flop \frag_parts_idx_reg[0] (.clk (clk), .d (n_104), .sena
       (1'b1), .aclr (n_56), .apre (1'b0), .srl (rst_frag_parts_idx),
       .srd (1'b0), .q (frag_parts_idx[0]));
  CDN_flop \frag_parts_idx_reg[1] (.clk (clk), .d (n_105), .sena
       (1'b1), .aclr (n_56), .apre (1'b0), .srl (rst_frag_parts_idx),
       .srd (1'b0), .q (frag_parts_idx[1]));
  CDN_flop \frag_parts_idx_reg[2] (.clk (clk), .d (n_106), .sena
       (1'b1), .aclr (n_56), .apre (1'b0), .srl (rst_frag_parts_idx),
       .srd (1'b0), .q (frag_parts_idx[2]));
  CDN_flop \in_kmer_indices_r_reg[0][0] (.clk (clk), .d
       (\in_kmer_indices[0] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [0]));
  CDN_flop \in_kmer_indices_r_reg[0][1] (.clk (clk), .d
       (\in_kmer_indices[0] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [1]));
  CDN_flop \in_kmer_indices_r_reg[0][2] (.clk (clk), .d
       (\in_kmer_indices[0] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [2]));
  CDN_flop \in_kmer_indices_r_reg[0][3] (.clk (clk), .d
       (\in_kmer_indices[0] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [3]));
  CDN_flop \in_kmer_indices_r_reg[0][4] (.clk (clk), .d
       (\in_kmer_indices[0] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [4]));
  CDN_flop \in_kmer_indices_r_reg[0][5] (.clk (clk), .d
       (\in_kmer_indices[0] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [5]));
  CDN_flop \in_kmer_indices_r_reg[0][6] (.clk (clk), .d
       (\in_kmer_indices[0] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [6]));
  CDN_flop \in_kmer_indices_r_reg[0][7] (.clk (clk), .d
       (\in_kmer_indices[0] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [7]));
  CDN_flop \in_kmer_indices_r_reg[0][8] (.clk (clk), .d
       (\in_kmer_indices[0] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[0] [8]));
  CDN_flop \in_kmer_indices_r_reg[1][0] (.clk (clk), .d
       (\in_kmer_indices[1] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [0]));
  CDN_flop \in_kmer_indices_r_reg[1][1] (.clk (clk), .d
       (\in_kmer_indices[1] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [1]));
  CDN_flop \in_kmer_indices_r_reg[1][2] (.clk (clk), .d
       (\in_kmer_indices[1] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [2]));
  CDN_flop \in_kmer_indices_r_reg[1][3] (.clk (clk), .d
       (\in_kmer_indices[1] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [3]));
  CDN_flop \in_kmer_indices_r_reg[1][4] (.clk (clk), .d
       (\in_kmer_indices[1] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [4]));
  CDN_flop \in_kmer_indices_r_reg[1][5] (.clk (clk), .d
       (\in_kmer_indices[1] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [5]));
  CDN_flop \in_kmer_indices_r_reg[1][6] (.clk (clk), .d
       (\in_kmer_indices[1] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [6]));
  CDN_flop \in_kmer_indices_r_reg[1][7] (.clk (clk), .d
       (\in_kmer_indices[1] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [7]));
  CDN_flop \in_kmer_indices_r_reg[1][8] (.clk (clk), .d
       (\in_kmer_indices[1] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[1] [8]));
  CDN_flop \in_kmer_indices_r_reg[2][0] (.clk (clk), .d
       (\in_kmer_indices[2] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [0]));
  CDN_flop \in_kmer_indices_r_reg[2][1] (.clk (clk), .d
       (\in_kmer_indices[2] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [1]));
  CDN_flop \in_kmer_indices_r_reg[2][2] (.clk (clk), .d
       (\in_kmer_indices[2] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [2]));
  CDN_flop \in_kmer_indices_r_reg[2][3] (.clk (clk), .d
       (\in_kmer_indices[2] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [3]));
  CDN_flop \in_kmer_indices_r_reg[2][4] (.clk (clk), .d
       (\in_kmer_indices[2] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [4]));
  CDN_flop \in_kmer_indices_r_reg[2][5] (.clk (clk), .d
       (\in_kmer_indices[2] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [5]));
  CDN_flop \in_kmer_indices_r_reg[2][6] (.clk (clk), .d
       (\in_kmer_indices[2] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [6]));
  CDN_flop \in_kmer_indices_r_reg[2][7] (.clk (clk), .d
       (\in_kmer_indices[2] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [7]));
  CDN_flop \in_kmer_indices_r_reg[2][8] (.clk (clk), .d
       (\in_kmer_indices[2] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[2] [8]));
  CDN_flop \in_kmer_indices_r_reg[3][0] (.clk (clk), .d
       (\in_kmer_indices[3] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [0]));
  CDN_flop \in_kmer_indices_r_reg[3][1] (.clk (clk), .d
       (\in_kmer_indices[3] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [1]));
  CDN_flop \in_kmer_indices_r_reg[3][2] (.clk (clk), .d
       (\in_kmer_indices[3] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [2]));
  CDN_flop \in_kmer_indices_r_reg[3][3] (.clk (clk), .d
       (\in_kmer_indices[3] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [3]));
  CDN_flop \in_kmer_indices_r_reg[3][4] (.clk (clk), .d
       (\in_kmer_indices[3] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [4]));
  CDN_flop \in_kmer_indices_r_reg[3][5] (.clk (clk), .d
       (\in_kmer_indices[3] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [5]));
  CDN_flop \in_kmer_indices_r_reg[3][6] (.clk (clk), .d
       (\in_kmer_indices[3] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [6]));
  CDN_flop \in_kmer_indices_r_reg[3][7] (.clk (clk), .d
       (\in_kmer_indices[3] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [7]));
  CDN_flop \in_kmer_indices_r_reg[3][8] (.clk (clk), .d
       (\in_kmer_indices[3] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[3] [8]));
  CDN_flop \in_kmer_indices_r_reg[4][0] (.clk (clk), .d
       (\in_kmer_indices[4] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [0]));
  CDN_flop \in_kmer_indices_r_reg[4][1] (.clk (clk), .d
       (\in_kmer_indices[4] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [1]));
  CDN_flop \in_kmer_indices_r_reg[4][2] (.clk (clk), .d
       (\in_kmer_indices[4] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [2]));
  CDN_flop \in_kmer_indices_r_reg[4][3] (.clk (clk), .d
       (\in_kmer_indices[4] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [3]));
  CDN_flop \in_kmer_indices_r_reg[4][4] (.clk (clk), .d
       (\in_kmer_indices[4] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [4]));
  CDN_flop \in_kmer_indices_r_reg[4][5] (.clk (clk), .d
       (\in_kmer_indices[4] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [5]));
  CDN_flop \in_kmer_indices_r_reg[4][6] (.clk (clk), .d
       (\in_kmer_indices[4] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [6]));
  CDN_flop \in_kmer_indices_r_reg[4][7] (.clk (clk), .d
       (\in_kmer_indices[4] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [7]));
  CDN_flop \in_kmer_indices_r_reg[4][8] (.clk (clk), .d
       (\in_kmer_indices[4] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[4] [8]));
  CDN_flop \in_kmer_indices_r_reg[5][0] (.clk (clk), .d
       (\in_kmer_indices[5] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [0]));
  CDN_flop \in_kmer_indices_r_reg[5][1] (.clk (clk), .d
       (\in_kmer_indices[5] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [1]));
  CDN_flop \in_kmer_indices_r_reg[5][2] (.clk (clk), .d
       (\in_kmer_indices[5] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [2]));
  CDN_flop \in_kmer_indices_r_reg[5][3] (.clk (clk), .d
       (\in_kmer_indices[5] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [3]));
  CDN_flop \in_kmer_indices_r_reg[5][4] (.clk (clk), .d
       (\in_kmer_indices[5] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [4]));
  CDN_flop \in_kmer_indices_r_reg[5][5] (.clk (clk), .d
       (\in_kmer_indices[5] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [5]));
  CDN_flop \in_kmer_indices_r_reg[5][6] (.clk (clk), .d
       (\in_kmer_indices[5] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [6]));
  CDN_flop \in_kmer_indices_r_reg[5][7] (.clk (clk), .d
       (\in_kmer_indices[5] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [7]));
  CDN_flop \in_kmer_indices_r_reg[5][8] (.clk (clk), .d
       (\in_kmer_indices[5] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[5] [8]));
  CDN_flop \in_kmer_indices_r_reg[6][0] (.clk (clk), .d
       (\in_kmer_indices[6] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [0]));
  CDN_flop \in_kmer_indices_r_reg[6][1] (.clk (clk), .d
       (\in_kmer_indices[6] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [1]));
  CDN_flop \in_kmer_indices_r_reg[6][2] (.clk (clk), .d
       (\in_kmer_indices[6] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [2]));
  CDN_flop \in_kmer_indices_r_reg[6][3] (.clk (clk), .d
       (\in_kmer_indices[6] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [3]));
  CDN_flop \in_kmer_indices_r_reg[6][4] (.clk (clk), .d
       (\in_kmer_indices[6] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [4]));
  CDN_flop \in_kmer_indices_r_reg[6][5] (.clk (clk), .d
       (\in_kmer_indices[6] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [5]));
  CDN_flop \in_kmer_indices_r_reg[6][6] (.clk (clk), .d
       (\in_kmer_indices[6] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [6]));
  CDN_flop \in_kmer_indices_r_reg[6][7] (.clk (clk), .d
       (\in_kmer_indices[6] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [7]));
  CDN_flop \in_kmer_indices_r_reg[6][8] (.clk (clk), .d
       (\in_kmer_indices[6] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[6] [8]));
  CDN_flop \in_kmer_indices_r_reg[7][0] (.clk (clk), .d
       (\in_kmer_indices[7] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [0]));
  CDN_flop \in_kmer_indices_r_reg[7][1] (.clk (clk), .d
       (\in_kmer_indices[7] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [1]));
  CDN_flop \in_kmer_indices_r_reg[7][2] (.clk (clk), .d
       (\in_kmer_indices[7] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [2]));
  CDN_flop \in_kmer_indices_r_reg[7][3] (.clk (clk), .d
       (\in_kmer_indices[7] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [3]));
  CDN_flop \in_kmer_indices_r_reg[7][4] (.clk (clk), .d
       (\in_kmer_indices[7] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [4]));
  CDN_flop \in_kmer_indices_r_reg[7][5] (.clk (clk), .d
       (\in_kmer_indices[7] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [5]));
  CDN_flop \in_kmer_indices_r_reg[7][6] (.clk (clk), .d
       (\in_kmer_indices[7] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [6]));
  CDN_flop \in_kmer_indices_r_reg[7][7] (.clk (clk), .d
       (\in_kmer_indices[7] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [7]));
  CDN_flop \in_kmer_indices_r_reg[7][8] (.clk (clk), .d
       (\in_kmer_indices[7] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[7] [8]));
  CDN_flop \in_kmer_indices_r_reg[8][0] (.clk (clk), .d
       (\in_kmer_indices[8] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [0]));
  CDN_flop \in_kmer_indices_r_reg[8][1] (.clk (clk), .d
       (\in_kmer_indices[8] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [1]));
  CDN_flop \in_kmer_indices_r_reg[8][2] (.clk (clk), .d
       (\in_kmer_indices[8] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [2]));
  CDN_flop \in_kmer_indices_r_reg[8][3] (.clk (clk), .d
       (\in_kmer_indices[8] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [3]));
  CDN_flop \in_kmer_indices_r_reg[8][4] (.clk (clk), .d
       (\in_kmer_indices[8] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [4]));
  CDN_flop \in_kmer_indices_r_reg[8][5] (.clk (clk), .d
       (\in_kmer_indices[8] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [5]));
  CDN_flop \in_kmer_indices_r_reg[8][6] (.clk (clk), .d
       (\in_kmer_indices[8] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [6]));
  CDN_flop \in_kmer_indices_r_reg[8][7] (.clk (clk), .d
       (\in_kmer_indices[8] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [7]));
  CDN_flop \in_kmer_indices_r_reg[8][8] (.clk (clk), .d
       (\in_kmer_indices[8] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[8] [8]));
  CDN_flop \in_kmer_indices_r_reg[9][0] (.clk (clk), .d
       (\in_kmer_indices[9] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [0]));
  CDN_flop \in_kmer_indices_r_reg[9][1] (.clk (clk), .d
       (\in_kmer_indices[9] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [1]));
  CDN_flop \in_kmer_indices_r_reg[9][2] (.clk (clk), .d
       (\in_kmer_indices[9] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [2]));
  CDN_flop \in_kmer_indices_r_reg[9][3] (.clk (clk), .d
       (\in_kmer_indices[9] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [3]));
  CDN_flop \in_kmer_indices_r_reg[9][4] (.clk (clk), .d
       (\in_kmer_indices[9] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [4]));
  CDN_flop \in_kmer_indices_r_reg[9][5] (.clk (clk), .d
       (\in_kmer_indices[9] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [5]));
  CDN_flop \in_kmer_indices_r_reg[9][6] (.clk (clk), .d
       (\in_kmer_indices[9] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [6]));
  CDN_flop \in_kmer_indices_r_reg[9][7] (.clk (clk), .d
       (\in_kmer_indices[9] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [7]));
  CDN_flop \in_kmer_indices_r_reg[9][8] (.clk (clk), .d
       (\in_kmer_indices[9] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[9] [8]));
  CDN_flop \in_kmer_indices_r_reg[10][0] (.clk (clk), .d
       (\in_kmer_indices[10] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [0]));
  CDN_flop \in_kmer_indices_r_reg[10][1] (.clk (clk), .d
       (\in_kmer_indices[10] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [1]));
  CDN_flop \in_kmer_indices_r_reg[10][2] (.clk (clk), .d
       (\in_kmer_indices[10] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [2]));
  CDN_flop \in_kmer_indices_r_reg[10][3] (.clk (clk), .d
       (\in_kmer_indices[10] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [3]));
  CDN_flop \in_kmer_indices_r_reg[10][4] (.clk (clk), .d
       (\in_kmer_indices[10] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [4]));
  CDN_flop \in_kmer_indices_r_reg[10][5] (.clk (clk), .d
       (\in_kmer_indices[10] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [5]));
  CDN_flop \in_kmer_indices_r_reg[10][6] (.clk (clk), .d
       (\in_kmer_indices[10] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [6]));
  CDN_flop \in_kmer_indices_r_reg[10][7] (.clk (clk), .d
       (\in_kmer_indices[10] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [7]));
  CDN_flop \in_kmer_indices_r_reg[10][8] (.clk (clk), .d
       (\in_kmer_indices[10] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[10] [8]));
  CDN_flop \in_kmer_indices_r_reg[11][0] (.clk (clk), .d
       (\in_kmer_indices[11] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [0]));
  CDN_flop \in_kmer_indices_r_reg[11][1] (.clk (clk), .d
       (\in_kmer_indices[11] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [1]));
  CDN_flop \in_kmer_indices_r_reg[11][2] (.clk (clk), .d
       (\in_kmer_indices[11] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [2]));
  CDN_flop \in_kmer_indices_r_reg[11][3] (.clk (clk), .d
       (\in_kmer_indices[11] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [3]));
  CDN_flop \in_kmer_indices_r_reg[11][4] (.clk (clk), .d
       (\in_kmer_indices[11] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [4]));
  CDN_flop \in_kmer_indices_r_reg[11][5] (.clk (clk), .d
       (\in_kmer_indices[11] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [5]));
  CDN_flop \in_kmer_indices_r_reg[11][6] (.clk (clk), .d
       (\in_kmer_indices[11] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [6]));
  CDN_flop \in_kmer_indices_r_reg[11][7] (.clk (clk), .d
       (\in_kmer_indices[11] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [7]));
  CDN_flop \in_kmer_indices_r_reg[11][8] (.clk (clk), .d
       (\in_kmer_indices[11] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[11] [8]));
  CDN_flop \in_kmer_indices_r_reg[12][0] (.clk (clk), .d
       (\in_kmer_indices[12] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [0]));
  CDN_flop \in_kmer_indices_r_reg[12][1] (.clk (clk), .d
       (\in_kmer_indices[12] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [1]));
  CDN_flop \in_kmer_indices_r_reg[12][2] (.clk (clk), .d
       (\in_kmer_indices[12] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [2]));
  CDN_flop \in_kmer_indices_r_reg[12][3] (.clk (clk), .d
       (\in_kmer_indices[12] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [3]));
  CDN_flop \in_kmer_indices_r_reg[12][4] (.clk (clk), .d
       (\in_kmer_indices[12] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [4]));
  CDN_flop \in_kmer_indices_r_reg[12][5] (.clk (clk), .d
       (\in_kmer_indices[12] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [5]));
  CDN_flop \in_kmer_indices_r_reg[12][6] (.clk (clk), .d
       (\in_kmer_indices[12] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [6]));
  CDN_flop \in_kmer_indices_r_reg[12][7] (.clk (clk), .d
       (\in_kmer_indices[12] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [7]));
  CDN_flop \in_kmer_indices_r_reg[12][8] (.clk (clk), .d
       (\in_kmer_indices[12] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[12] [8]));
  CDN_flop \in_kmer_indices_r_reg[13][0] (.clk (clk), .d
       (\in_kmer_indices[13] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [0]));
  CDN_flop \in_kmer_indices_r_reg[13][1] (.clk (clk), .d
       (\in_kmer_indices[13] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [1]));
  CDN_flop \in_kmer_indices_r_reg[13][2] (.clk (clk), .d
       (\in_kmer_indices[13] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [2]));
  CDN_flop \in_kmer_indices_r_reg[13][3] (.clk (clk), .d
       (\in_kmer_indices[13] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [3]));
  CDN_flop \in_kmer_indices_r_reg[13][4] (.clk (clk), .d
       (\in_kmer_indices[13] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [4]));
  CDN_flop \in_kmer_indices_r_reg[13][5] (.clk (clk), .d
       (\in_kmer_indices[13] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [5]));
  CDN_flop \in_kmer_indices_r_reg[13][6] (.clk (clk), .d
       (\in_kmer_indices[13] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [6]));
  CDN_flop \in_kmer_indices_r_reg[13][7] (.clk (clk), .d
       (\in_kmer_indices[13] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [7]));
  CDN_flop \in_kmer_indices_r_reg[13][8] (.clk (clk), .d
       (\in_kmer_indices[13] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[13] [8]));
  CDN_flop \in_kmer_indices_r_reg[14][0] (.clk (clk), .d
       (\in_kmer_indices[14] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [0]));
  CDN_flop \in_kmer_indices_r_reg[14][1] (.clk (clk), .d
       (\in_kmer_indices[14] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [1]));
  CDN_flop \in_kmer_indices_r_reg[14][2] (.clk (clk), .d
       (\in_kmer_indices[14] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [2]));
  CDN_flop \in_kmer_indices_r_reg[14][3] (.clk (clk), .d
       (\in_kmer_indices[14] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [3]));
  CDN_flop \in_kmer_indices_r_reg[14][4] (.clk (clk), .d
       (\in_kmer_indices[14] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [4]));
  CDN_flop \in_kmer_indices_r_reg[14][5] (.clk (clk), .d
       (\in_kmer_indices[14] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [5]));
  CDN_flop \in_kmer_indices_r_reg[14][6] (.clk (clk), .d
       (\in_kmer_indices[14] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [6]));
  CDN_flop \in_kmer_indices_r_reg[14][7] (.clk (clk), .d
       (\in_kmer_indices[14] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [7]));
  CDN_flop \in_kmer_indices_r_reg[14][8] (.clk (clk), .d
       (\in_kmer_indices[14] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[14] [8]));
  CDN_flop \in_kmer_indices_r_reg[15][0] (.clk (clk), .d
       (\in_kmer_indices[15] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [0]));
  CDN_flop \in_kmer_indices_r_reg[15][1] (.clk (clk), .d
       (\in_kmer_indices[15] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [1]));
  CDN_flop \in_kmer_indices_r_reg[15][2] (.clk (clk), .d
       (\in_kmer_indices[15] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [2]));
  CDN_flop \in_kmer_indices_r_reg[15][3] (.clk (clk), .d
       (\in_kmer_indices[15] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [3]));
  CDN_flop \in_kmer_indices_r_reg[15][4] (.clk (clk), .d
       (\in_kmer_indices[15] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [4]));
  CDN_flop \in_kmer_indices_r_reg[15][5] (.clk (clk), .d
       (\in_kmer_indices[15] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [5]));
  CDN_flop \in_kmer_indices_r_reg[15][6] (.clk (clk), .d
       (\in_kmer_indices[15] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [6]));
  CDN_flop \in_kmer_indices_r_reg[15][7] (.clk (clk), .d
       (\in_kmer_indices[15] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [7]));
  CDN_flop \in_kmer_indices_r_reg[15][8] (.clk (clk), .d
       (\in_kmer_indices[15] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[15] [8]));
  CDN_flop \in_kmer_indices_r_reg[16][0] (.clk (clk), .d
       (\in_kmer_indices[16] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [0]));
  CDN_flop \in_kmer_indices_r_reg[16][1] (.clk (clk), .d
       (\in_kmer_indices[16] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [1]));
  CDN_flop \in_kmer_indices_r_reg[16][2] (.clk (clk), .d
       (\in_kmer_indices[16] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [2]));
  CDN_flop \in_kmer_indices_r_reg[16][3] (.clk (clk), .d
       (\in_kmer_indices[16] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [3]));
  CDN_flop \in_kmer_indices_r_reg[16][4] (.clk (clk), .d
       (\in_kmer_indices[16] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [4]));
  CDN_flop \in_kmer_indices_r_reg[16][5] (.clk (clk), .d
       (\in_kmer_indices[16] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [5]));
  CDN_flop \in_kmer_indices_r_reg[16][6] (.clk (clk), .d
       (\in_kmer_indices[16] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [6]));
  CDN_flop \in_kmer_indices_r_reg[16][7] (.clk (clk), .d
       (\in_kmer_indices[16] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [7]));
  CDN_flop \in_kmer_indices_r_reg[16][8] (.clk (clk), .d
       (\in_kmer_indices[16] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[16] [8]));
  CDN_flop \in_kmer_indices_r_reg[17][0] (.clk (clk), .d
       (\in_kmer_indices[17] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [0]));
  CDN_flop \in_kmer_indices_r_reg[17][1] (.clk (clk), .d
       (\in_kmer_indices[17] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [1]));
  CDN_flop \in_kmer_indices_r_reg[17][2] (.clk (clk), .d
       (\in_kmer_indices[17] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [2]));
  CDN_flop \in_kmer_indices_r_reg[17][3] (.clk (clk), .d
       (\in_kmer_indices[17] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [3]));
  CDN_flop \in_kmer_indices_r_reg[17][4] (.clk (clk), .d
       (\in_kmer_indices[17] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [4]));
  CDN_flop \in_kmer_indices_r_reg[17][5] (.clk (clk), .d
       (\in_kmer_indices[17] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [5]));
  CDN_flop \in_kmer_indices_r_reg[17][6] (.clk (clk), .d
       (\in_kmer_indices[17] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [6]));
  CDN_flop \in_kmer_indices_r_reg[17][7] (.clk (clk), .d
       (\in_kmer_indices[17] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [7]));
  CDN_flop \in_kmer_indices_r_reg[17][8] (.clk (clk), .d
       (\in_kmer_indices[17] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[17] [8]));
  CDN_flop \in_kmer_indices_r_reg[18][0] (.clk (clk), .d
       (\in_kmer_indices[18] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [0]));
  CDN_flop \in_kmer_indices_r_reg[18][1] (.clk (clk), .d
       (\in_kmer_indices[18] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [1]));
  CDN_flop \in_kmer_indices_r_reg[18][2] (.clk (clk), .d
       (\in_kmer_indices[18] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [2]));
  CDN_flop \in_kmer_indices_r_reg[18][3] (.clk (clk), .d
       (\in_kmer_indices[18] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [3]));
  CDN_flop \in_kmer_indices_r_reg[18][4] (.clk (clk), .d
       (\in_kmer_indices[18] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [4]));
  CDN_flop \in_kmer_indices_r_reg[18][5] (.clk (clk), .d
       (\in_kmer_indices[18] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [5]));
  CDN_flop \in_kmer_indices_r_reg[18][6] (.clk (clk), .d
       (\in_kmer_indices[18] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [6]));
  CDN_flop \in_kmer_indices_r_reg[18][7] (.clk (clk), .d
       (\in_kmer_indices[18] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [7]));
  CDN_flop \in_kmer_indices_r_reg[18][8] (.clk (clk), .d
       (\in_kmer_indices[18] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[18] [8]));
  CDN_flop \in_kmer_indices_r_reg[19][0] (.clk (clk), .d
       (\in_kmer_indices[19] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [0]));
  CDN_flop \in_kmer_indices_r_reg[19][1] (.clk (clk), .d
       (\in_kmer_indices[19] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [1]));
  CDN_flop \in_kmer_indices_r_reg[19][2] (.clk (clk), .d
       (\in_kmer_indices[19] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [2]));
  CDN_flop \in_kmer_indices_r_reg[19][3] (.clk (clk), .d
       (\in_kmer_indices[19] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [3]));
  CDN_flop \in_kmer_indices_r_reg[19][4] (.clk (clk), .d
       (\in_kmer_indices[19] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [4]));
  CDN_flop \in_kmer_indices_r_reg[19][5] (.clk (clk), .d
       (\in_kmer_indices[19] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [5]));
  CDN_flop \in_kmer_indices_r_reg[19][6] (.clk (clk), .d
       (\in_kmer_indices[19] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [6]));
  CDN_flop \in_kmer_indices_r_reg[19][7] (.clk (clk), .d
       (\in_kmer_indices[19] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [7]));
  CDN_flop \in_kmer_indices_r_reg[19][8] (.clk (clk), .d
       (\in_kmer_indices[19] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[19] [8]));
  CDN_flop \in_kmer_indices_r_reg[20][0] (.clk (clk), .d
       (\in_kmer_indices[20] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [0]));
  CDN_flop \in_kmer_indices_r_reg[20][1] (.clk (clk), .d
       (\in_kmer_indices[20] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [1]));
  CDN_flop \in_kmer_indices_r_reg[20][2] (.clk (clk), .d
       (\in_kmer_indices[20] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [2]));
  CDN_flop \in_kmer_indices_r_reg[20][3] (.clk (clk), .d
       (\in_kmer_indices[20] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [3]));
  CDN_flop \in_kmer_indices_r_reg[20][4] (.clk (clk), .d
       (\in_kmer_indices[20] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [4]));
  CDN_flop \in_kmer_indices_r_reg[20][5] (.clk (clk), .d
       (\in_kmer_indices[20] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [5]));
  CDN_flop \in_kmer_indices_r_reg[20][6] (.clk (clk), .d
       (\in_kmer_indices[20] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [6]));
  CDN_flop \in_kmer_indices_r_reg[20][7] (.clk (clk), .d
       (\in_kmer_indices[20] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [7]));
  CDN_flop \in_kmer_indices_r_reg[20][8] (.clk (clk), .d
       (\in_kmer_indices[20] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[20] [8]));
  CDN_flop \in_kmer_indices_r_reg[21][0] (.clk (clk), .d
       (\in_kmer_indices[21] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [0]));
  CDN_flop \in_kmer_indices_r_reg[21][1] (.clk (clk), .d
       (\in_kmer_indices[21] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [1]));
  CDN_flop \in_kmer_indices_r_reg[21][2] (.clk (clk), .d
       (\in_kmer_indices[21] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [2]));
  CDN_flop \in_kmer_indices_r_reg[21][3] (.clk (clk), .d
       (\in_kmer_indices[21] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [3]));
  CDN_flop \in_kmer_indices_r_reg[21][4] (.clk (clk), .d
       (\in_kmer_indices[21] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [4]));
  CDN_flop \in_kmer_indices_r_reg[21][5] (.clk (clk), .d
       (\in_kmer_indices[21] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [5]));
  CDN_flop \in_kmer_indices_r_reg[21][6] (.clk (clk), .d
       (\in_kmer_indices[21] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [6]));
  CDN_flop \in_kmer_indices_r_reg[21][7] (.clk (clk), .d
       (\in_kmer_indices[21] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [7]));
  CDN_flop \in_kmer_indices_r_reg[21][8] (.clk (clk), .d
       (\in_kmer_indices[21] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[21] [8]));
  CDN_flop \in_kmer_indices_r_reg[22][0] (.clk (clk), .d
       (\in_kmer_indices[22] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [0]));
  CDN_flop \in_kmer_indices_r_reg[22][1] (.clk (clk), .d
       (\in_kmer_indices[22] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [1]));
  CDN_flop \in_kmer_indices_r_reg[22][2] (.clk (clk), .d
       (\in_kmer_indices[22] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [2]));
  CDN_flop \in_kmer_indices_r_reg[22][3] (.clk (clk), .d
       (\in_kmer_indices[22] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [3]));
  CDN_flop \in_kmer_indices_r_reg[22][4] (.clk (clk), .d
       (\in_kmer_indices[22] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [4]));
  CDN_flop \in_kmer_indices_r_reg[22][5] (.clk (clk), .d
       (\in_kmer_indices[22] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [5]));
  CDN_flop \in_kmer_indices_r_reg[22][6] (.clk (clk), .d
       (\in_kmer_indices[22] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [6]));
  CDN_flop \in_kmer_indices_r_reg[22][7] (.clk (clk), .d
       (\in_kmer_indices[22] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [7]));
  CDN_flop \in_kmer_indices_r_reg[22][8] (.clk (clk), .d
       (\in_kmer_indices[22] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[22] [8]));
  CDN_flop \in_kmer_indices_r_reg[23][0] (.clk (clk), .d
       (\in_kmer_indices[23] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [0]));
  CDN_flop \in_kmer_indices_r_reg[23][1] (.clk (clk), .d
       (\in_kmer_indices[23] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [1]));
  CDN_flop \in_kmer_indices_r_reg[23][2] (.clk (clk), .d
       (\in_kmer_indices[23] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [2]));
  CDN_flop \in_kmer_indices_r_reg[23][3] (.clk (clk), .d
       (\in_kmer_indices[23] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [3]));
  CDN_flop \in_kmer_indices_r_reg[23][4] (.clk (clk), .d
       (\in_kmer_indices[23] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [4]));
  CDN_flop \in_kmer_indices_r_reg[23][5] (.clk (clk), .d
       (\in_kmer_indices[23] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [5]));
  CDN_flop \in_kmer_indices_r_reg[23][6] (.clk (clk), .d
       (\in_kmer_indices[23] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [6]));
  CDN_flop \in_kmer_indices_r_reg[23][7] (.clk (clk), .d
       (\in_kmer_indices[23] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [7]));
  CDN_flop \in_kmer_indices_r_reg[23][8] (.clk (clk), .d
       (\in_kmer_indices[23] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[23] [8]));
  CDN_flop \in_kmer_indices_r_reg[24][0] (.clk (clk), .d
       (\in_kmer_indices[24] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [0]));
  CDN_flop \in_kmer_indices_r_reg[24][1] (.clk (clk), .d
       (\in_kmer_indices[24] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [1]));
  CDN_flop \in_kmer_indices_r_reg[24][2] (.clk (clk), .d
       (\in_kmer_indices[24] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [2]));
  CDN_flop \in_kmer_indices_r_reg[24][3] (.clk (clk), .d
       (\in_kmer_indices[24] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [3]));
  CDN_flop \in_kmer_indices_r_reg[24][4] (.clk (clk), .d
       (\in_kmer_indices[24] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [4]));
  CDN_flop \in_kmer_indices_r_reg[24][5] (.clk (clk), .d
       (\in_kmer_indices[24] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [5]));
  CDN_flop \in_kmer_indices_r_reg[24][6] (.clk (clk), .d
       (\in_kmer_indices[24] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [6]));
  CDN_flop \in_kmer_indices_r_reg[24][7] (.clk (clk), .d
       (\in_kmer_indices[24] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [7]));
  CDN_flop \in_kmer_indices_r_reg[24][8] (.clk (clk), .d
       (\in_kmer_indices[24] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[24] [8]));
  CDN_flop \in_kmer_indices_r_reg[25][0] (.clk (clk), .d
       (\in_kmer_indices[25] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [0]));
  CDN_flop \in_kmer_indices_r_reg[25][1] (.clk (clk), .d
       (\in_kmer_indices[25] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [1]));
  CDN_flop \in_kmer_indices_r_reg[25][2] (.clk (clk), .d
       (\in_kmer_indices[25] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [2]));
  CDN_flop \in_kmer_indices_r_reg[25][3] (.clk (clk), .d
       (\in_kmer_indices[25] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [3]));
  CDN_flop \in_kmer_indices_r_reg[25][4] (.clk (clk), .d
       (\in_kmer_indices[25] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [4]));
  CDN_flop \in_kmer_indices_r_reg[25][5] (.clk (clk), .d
       (\in_kmer_indices[25] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [5]));
  CDN_flop \in_kmer_indices_r_reg[25][6] (.clk (clk), .d
       (\in_kmer_indices[25] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [6]));
  CDN_flop \in_kmer_indices_r_reg[25][7] (.clk (clk), .d
       (\in_kmer_indices[25] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [7]));
  CDN_flop \in_kmer_indices_r_reg[25][8] (.clk (clk), .d
       (\in_kmer_indices[25] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[25] [8]));
  CDN_flop \in_kmer_indices_r_reg[26][0] (.clk (clk), .d
       (\in_kmer_indices[26] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [0]));
  CDN_flop \in_kmer_indices_r_reg[26][1] (.clk (clk), .d
       (\in_kmer_indices[26] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [1]));
  CDN_flop \in_kmer_indices_r_reg[26][2] (.clk (clk), .d
       (\in_kmer_indices[26] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [2]));
  CDN_flop \in_kmer_indices_r_reg[26][3] (.clk (clk), .d
       (\in_kmer_indices[26] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [3]));
  CDN_flop \in_kmer_indices_r_reg[26][4] (.clk (clk), .d
       (\in_kmer_indices[26] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [4]));
  CDN_flop \in_kmer_indices_r_reg[26][5] (.clk (clk), .d
       (\in_kmer_indices[26] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [5]));
  CDN_flop \in_kmer_indices_r_reg[26][6] (.clk (clk), .d
       (\in_kmer_indices[26] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [6]));
  CDN_flop \in_kmer_indices_r_reg[26][7] (.clk (clk), .d
       (\in_kmer_indices[26] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [7]));
  CDN_flop \in_kmer_indices_r_reg[26][8] (.clk (clk), .d
       (\in_kmer_indices[26] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[26] [8]));
  CDN_flop \in_kmer_indices_r_reg[27][0] (.clk (clk), .d
       (\in_kmer_indices[27] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [0]));
  CDN_flop \in_kmer_indices_r_reg[27][1] (.clk (clk), .d
       (\in_kmer_indices[27] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [1]));
  CDN_flop \in_kmer_indices_r_reg[27][2] (.clk (clk), .d
       (\in_kmer_indices[27] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [2]));
  CDN_flop \in_kmer_indices_r_reg[27][3] (.clk (clk), .d
       (\in_kmer_indices[27] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [3]));
  CDN_flop \in_kmer_indices_r_reg[27][4] (.clk (clk), .d
       (\in_kmer_indices[27] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [4]));
  CDN_flop \in_kmer_indices_r_reg[27][5] (.clk (clk), .d
       (\in_kmer_indices[27] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [5]));
  CDN_flop \in_kmer_indices_r_reg[27][6] (.clk (clk), .d
       (\in_kmer_indices[27] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [6]));
  CDN_flop \in_kmer_indices_r_reg[27][7] (.clk (clk), .d
       (\in_kmer_indices[27] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [7]));
  CDN_flop \in_kmer_indices_r_reg[27][8] (.clk (clk), .d
       (\in_kmer_indices[27] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[27] [8]));
  CDN_flop \in_kmer_indices_r_reg[28][0] (.clk (clk), .d
       (\in_kmer_indices[28] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [0]));
  CDN_flop \in_kmer_indices_r_reg[28][1] (.clk (clk), .d
       (\in_kmer_indices[28] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [1]));
  CDN_flop \in_kmer_indices_r_reg[28][2] (.clk (clk), .d
       (\in_kmer_indices[28] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [2]));
  CDN_flop \in_kmer_indices_r_reg[28][3] (.clk (clk), .d
       (\in_kmer_indices[28] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [3]));
  CDN_flop \in_kmer_indices_r_reg[28][4] (.clk (clk), .d
       (\in_kmer_indices[28] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [4]));
  CDN_flop \in_kmer_indices_r_reg[28][5] (.clk (clk), .d
       (\in_kmer_indices[28] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [5]));
  CDN_flop \in_kmer_indices_r_reg[28][6] (.clk (clk), .d
       (\in_kmer_indices[28] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [6]));
  CDN_flop \in_kmer_indices_r_reg[28][7] (.clk (clk), .d
       (\in_kmer_indices[28] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [7]));
  CDN_flop \in_kmer_indices_r_reg[28][8] (.clk (clk), .d
       (\in_kmer_indices[28] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[28] [8]));
  CDN_flop \in_kmer_indices_r_reg[29][0] (.clk (clk), .d
       (\in_kmer_indices[29] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [0]));
  CDN_flop \in_kmer_indices_r_reg[29][1] (.clk (clk), .d
       (\in_kmer_indices[29] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [1]));
  CDN_flop \in_kmer_indices_r_reg[29][2] (.clk (clk), .d
       (\in_kmer_indices[29] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [2]));
  CDN_flop \in_kmer_indices_r_reg[29][3] (.clk (clk), .d
       (\in_kmer_indices[29] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [3]));
  CDN_flop \in_kmer_indices_r_reg[29][4] (.clk (clk), .d
       (\in_kmer_indices[29] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [4]));
  CDN_flop \in_kmer_indices_r_reg[29][5] (.clk (clk), .d
       (\in_kmer_indices[29] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [5]));
  CDN_flop \in_kmer_indices_r_reg[29][6] (.clk (clk), .d
       (\in_kmer_indices[29] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [6]));
  CDN_flop \in_kmer_indices_r_reg[29][7] (.clk (clk), .d
       (\in_kmer_indices[29] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [7]));
  CDN_flop \in_kmer_indices_r_reg[29][8] (.clk (clk), .d
       (\in_kmer_indices[29] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[29] [8]));
  CDN_flop \in_kmer_indices_r_reg[30][0] (.clk (clk), .d
       (\in_kmer_indices[30] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [0]));
  CDN_flop \in_kmer_indices_r_reg[30][1] (.clk (clk), .d
       (\in_kmer_indices[30] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [1]));
  CDN_flop \in_kmer_indices_r_reg[30][2] (.clk (clk), .d
       (\in_kmer_indices[30] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [2]));
  CDN_flop \in_kmer_indices_r_reg[30][3] (.clk (clk), .d
       (\in_kmer_indices[30] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [3]));
  CDN_flop \in_kmer_indices_r_reg[30][4] (.clk (clk), .d
       (\in_kmer_indices[30] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [4]));
  CDN_flop \in_kmer_indices_r_reg[30][5] (.clk (clk), .d
       (\in_kmer_indices[30] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [5]));
  CDN_flop \in_kmer_indices_r_reg[30][6] (.clk (clk), .d
       (\in_kmer_indices[30] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [6]));
  CDN_flop \in_kmer_indices_r_reg[30][7] (.clk (clk), .d
       (\in_kmer_indices[30] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [7]));
  CDN_flop \in_kmer_indices_r_reg[30][8] (.clk (clk), .d
       (\in_kmer_indices[30] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[30] [8]));
  CDN_flop \in_kmer_indices_r_reg[31][0] (.clk (clk), .d
       (\in_kmer_indices[31] [0]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [0]));
  CDN_flop \in_kmer_indices_r_reg[31][1] (.clk (clk), .d
       (\in_kmer_indices[31] [1]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [1]));
  CDN_flop \in_kmer_indices_r_reg[31][2] (.clk (clk), .d
       (\in_kmer_indices[31] [2]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [2]));
  CDN_flop \in_kmer_indices_r_reg[31][3] (.clk (clk), .d
       (\in_kmer_indices[31] [3]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [3]));
  CDN_flop \in_kmer_indices_r_reg[31][4] (.clk (clk), .d
       (\in_kmer_indices[31] [4]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [4]));
  CDN_flop \in_kmer_indices_r_reg[31][5] (.clk (clk), .d
       (\in_kmer_indices[31] [5]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [5]));
  CDN_flop \in_kmer_indices_r_reg[31][6] (.clk (clk), .d
       (\in_kmer_indices[31] [6]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [6]));
  CDN_flop \in_kmer_indices_r_reg[31][7] (.clk (clk), .d
       (\in_kmer_indices[31] [7]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [7]));
  CDN_flop \in_kmer_indices_r_reg[31][8] (.clk (clk), .d
       (\in_kmer_indices[31] [8]), .sena (valid_indices), .aclr (1'b0),
       .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\in_kmer_indices_r[31] [8]));
  CDN_flop \indices_idx_reg[0] (.clk (clk), .d (indices_idx_next[0]),
       .sena (1'b1), .aclr (n_56), .apre (1'b0), .srl (1'b0), .srd
       (1'b0), .q (indices_idx[0]));
  CDN_flop \indices_idx_reg[1] (.clk (clk), .d (indices_idx_next[1]),
       .sena (1'b1), .aclr (n_56), .apre (1'b0), .srl (1'b0), .srd
       (1'b0), .q (indices_idx[1]));
  CDN_flop \indices_idx_reg[2] (.clk (clk), .d (indices_idx_next[2]),
       .sena (1'b1), .aclr (n_56), .apre (1'b0), .srl (1'b0), .srd
       (1'b0), .q (indices_idx[2]));
  CDN_flop \indices_idx_reg[3] (.clk (clk), .d (indices_idx_next[3]),
       .sena (1'b1), .aclr (n_56), .apre (1'b0), .srl (1'b0), .srd
       (1'b0), .q (indices_idx[3]));
  CDN_flop \indices_idx_reg[4] (.clk (clk), .d (indices_idx_next[4]),
       .sena (1'b1), .aclr (n_56), .apre (1'b0), .srl (1'b0), .srd
       (1'b0), .q (indices_idx[4]));
  nand g325 (n_1010, frag_parts_idx[0], frag_parts_idx[1],
       frag_parts_idx[2]);
  not g326 (n_57, n_1010);
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
`ifdef RC_CDN_GENERIC_GATE
`else
`ifdef ONE_HOT_MUX // captures one-hot property of select inputs
module CDN_mux4(sel0, data0, sel1, data1, sel2, data2, sel3, data3, z);
  input sel0, data0, sel1, data1, sel2, data2, sel3, data3;
  output z;
  wire sel0, data0, sel1, data1, sel2, data2, sel3, data3;
  reg  z;
  always 
    @(sel0 or sel1 or sel2 or sel3 or data0 or data1 or data2 or data3) 
      case ({sel0, sel1, sel2, sel3})
       4'b1000: z = data0;
       4'b0100: z = data1;
       4'b0010: z = data2;
       4'b0001: z = data3;
       default: z = 1'bX;
      endcase
endmodule
`else
module CDN_mux4(sel0, data0, sel1, data1, sel2, data2, sel3, data3, z);
  input sel0, data0, sel1, data1, sel2, data2, sel3, data3;
  output z;
  wire sel0, data0, sel1, data1, sel2, data2, sel3, data3;
  wire z;
  wire w_0, w_1, w_2, w_3;
  and a_0 (w_0, sel0, data0);
  and a_1 (w_1, sel1, data1);
  and a_2 (w_2, sel2, data2);
  and a_3 (w_3, sel3, data3);
  or org (z, w_0, w_1, w_2, w_3);
endmodule
`endif // ONE_HOT_MUX
`endif
`ifdef RC_CDN_GENERIC_GATE
`else
`ifdef ONE_HOT_MUX
module CDN_bmux2(sel0, data0, data1, z);
  input sel0, data0, data1;
  output z;
  wire sel0, data0, data1;
  reg  z;
  always 
    @(sel0 or data0 or data1) 
      case ({sel0})
       1'b0: z = data0;
       1'b1: z = data1;
      endcase
endmodule
`else
module CDN_bmux2(sel0, data0, data1, z);
  input sel0, data0, data1;
  output z;
  wire sel0, data0, data1;
  wire z;
  wire inv_sel0, w_0, w_1;
  not i_0 (inv_sel0, sel0);
  and a_0 (w_0, inv_sel0, data0);
  and a_1 (w_1, sel0, data1);
  or org (z, w_0, w_1);
endmodule
`endif // ONE_HOT_MUX
`endif
`ifdef RC_CDN_GENERIC_GATE
`else
`ifdef ONE_HOT_MUX
module CDN_bmux8(sel0, data0, data1, sel1, data2, data3, sel2, data4,
     data5, data6, data7, z);
  input sel0, data0, data1, sel1, data2, data3, sel2, data4, data5,
       data6, data7;
  output z;
  wire sel0, data0, data1, sel1, data2, data3, sel2, data4, data5,
       data6, data7;
  reg  z;
  always 
    @(sel0 or sel1 or sel2 or data0 or data1 or data2 or data3 or data4
         or data5 or data6 or data7) 
      case ({sel0, sel1, sel2})
       3'b000: z = data0;
       3'b100: z = data1;
       3'b010: z = data2;
       3'b110: z = data3;
       3'b001: z = data4;
       3'b101: z = data5;
       3'b011: z = data6;
       3'b111: z = data7;
      endcase
endmodule
`else
module CDN_bmux8(sel0, data0, data1, sel1, data2, data3, sel2, data4,
     data5, data6, data7, z);
  input sel0, data0, data1, sel1, data2, data3, sel2, data4, data5,
       data6, data7;
  output z;
  wire sel0, data0, data1, sel1, data2, data3, sel2, data4, data5,
       data6, data7;
  wire z;
  wire inv_sel0, inv_sel1, inv_sel2, w_0, w_1, w_2, w_3, w_4;
  wire w_5, w_6, w_7;
  not i_0 (inv_sel0, sel0);
  not i_1 (inv_sel1, sel1);
  not i_2 (inv_sel2, sel2);
  and a_0 (w_0, inv_sel2, inv_sel1, inv_sel0, data0);
  and a_1 (w_1, inv_sel2, inv_sel1, sel0, data1);
  and a_2 (w_2, inv_sel2, sel1, inv_sel0, data2);
  and a_3 (w_3, inv_sel2, sel1, sel0, data3);
  and a_4 (w_4, sel2, inv_sel1, inv_sel0, data4);
  and a_5 (w_5, sel2, inv_sel1, sel0, data5);
  and a_6 (w_6, sel2, sel1, inv_sel0, data6);
  and a_7 (w_7, sel2, sel1, sel0, data7);
  or org (z, w_0, w_1, w_2, w_3, w_4, w_5, w_6, w_7);
endmodule
`endif // ONE_HOT_MUX
`endif
`ifdef RC_CDN_GENERIC_GATE
`else
`ifdef ONE_HOT_MUX
module CDN_bmux32(sel0, data0, data1, sel1, data2, data3, sel2, data4,
     data5, data6, data7, sel3, data8, data9, data10, data11, data12,
     data13, data14, data15, sel4, data16, data17, data18, data19,
     data20, data21, data22, data23, data24, data25, data26, data27,
     data28, data29, data30, data31, z);
  input sel0, data0, data1, sel1, data2, data3, sel2, data4, data5,
       data6, data7, sel3, data8, data9, data10, data11, data12,
       data13, data14, data15, sel4, data16, data17, data18, data19,
       data20, data21, data22, data23, data24, data25, data26, data27,
       data28, data29, data30, data31;
  output z;
  wire sel0, data0, data1, sel1, data2, data3, sel2, data4, data5,
       data6, data7, sel3, data8, data9, data10, data11, data12,
       data13, data14, data15, sel4, data16, data17, data18, data19,
       data20, data21, data22, data23, data24, data25, data26, data27,
       data28, data29, data30, data31;
  reg  z;
  always 
    @(sel0 or sel1 or sel2 or sel3 or sel4 or data0 or data1 or data2
         or data3 or data4 or data5 or data6 or data7 or data8 or data9
         or data10 or data11 or data12 or data13 or data14 or data15 or
         data16 or data17 or data18 or data19 or data20 or data21 or
         data22 or data23 or data24 or data25 or data26 or data27 or
         data28 or data29 or data30 or data31) 
      case ({sel0, sel1, sel2, sel3, sel4})
       5'b00000: z = data0;
       5'b10000: z = data1;
       5'b01000: z = data2;
       5'b11000: z = data3;
       5'b00100: z = data4;
       5'b10100: z = data5;
       5'b01100: z = data6;
       5'b11100: z = data7;
       5'b00010: z = data8;
       5'b10010: z = data9;
       5'b01010: z = data10;
       5'b11010: z = data11;
       5'b00110: z = data12;
       5'b10110: z = data13;
       5'b01110: z = data14;
       5'b11110: z = data15;
       5'b00001: z = data16;
       5'b10001: z = data17;
       5'b01001: z = data18;
       5'b11001: z = data19;
       5'b00101: z = data20;
       5'b10101: z = data21;
       5'b01101: z = data22;
       5'b11101: z = data23;
       5'b00011: z = data24;
       5'b10011: z = data25;
       5'b01011: z = data26;
       5'b11011: z = data27;
       5'b00111: z = data28;
       5'b10111: z = data29;
       5'b01111: z = data30;
       5'b11111: z = data31;
      endcase
endmodule
`else
module CDN_bmux32(sel0, data0, data1, sel1, data2, data3, sel2, data4,
     data5, data6, data7, sel3, data8, data9, data10, data11, data12,
     data13, data14, data15, sel4, data16, data17, data18, data19,
     data20, data21, data22, data23, data24, data25, data26, data27,
     data28, data29, data30, data31, z);
  input sel0, data0, data1, sel1, data2, data3, sel2, data4, data5,
       data6, data7, sel3, data8, data9, data10, data11, data12,
       data13, data14, data15, sel4, data16, data17, data18, data19,
       data20, data21, data22, data23, data24, data25, data26, data27,
       data28, data29, data30, data31;
  output z;
  wire sel0, data0, data1, sel1, data2, data3, sel2, data4, data5,
       data6, data7, sel3, data8, data9, data10, data11, data12,
       data13, data14, data15, sel4, data16, data17, data18, data19,
       data20, data21, data22, data23, data24, data25, data26, data27,
       data28, data29, data30, data31;
  wire z;
  wire inv_sel0, inv_sel1, inv_sel2, inv_sel3, inv_sel4, w_0, w_1, w_2;
  wire w_3, w_4, w_5, w_6, w_7, w_8, w_9, w_10;
  wire w_11, w_12, w_13, w_14, w_15, w_16, w_17, w_18;
  wire w_19, w_20, w_21, w_22, w_23, w_24, w_25, w_26;
  wire w_27, w_28, w_29, w_30, w_31;
  not i_0 (inv_sel0, sel0);
  not i_1 (inv_sel1, sel1);
  not i_2 (inv_sel2, sel2);
  not i_3 (inv_sel3, sel3);
  not i_4 (inv_sel4, sel4);
  and a_0 (w_0, inv_sel4, inv_sel3, inv_sel2, inv_sel1, inv_sel0,
       data0);
  and a_1 (w_1, inv_sel4, inv_sel3, inv_sel2, inv_sel1, sel0, data1);
  and a_2 (w_2, inv_sel4, inv_sel3, inv_sel2, sel1, inv_sel0, data2);
  and a_3 (w_3, inv_sel4, inv_sel3, inv_sel2, sel1, sel0, data3);
  and a_4 (w_4, inv_sel4, inv_sel3, sel2, inv_sel1, inv_sel0, data4);
  and a_5 (w_5, inv_sel4, inv_sel3, sel2, inv_sel1, sel0, data5);
  and a_6 (w_6, inv_sel4, inv_sel3, sel2, sel1, inv_sel0, data6);
  and a_7 (w_7, inv_sel4, inv_sel3, sel2, sel1, sel0, data7);
  and a_8 (w_8, inv_sel4, sel3, inv_sel2, inv_sel1, inv_sel0, data8);
  and a_9 (w_9, inv_sel4, sel3, inv_sel2, inv_sel1, sel0, data9);
  and a_10 (w_10, inv_sel4, sel3, inv_sel2, sel1, inv_sel0, data10);
  and a_11 (w_11, inv_sel4, sel3, inv_sel2, sel1, sel0, data11);
  and a_12 (w_12, inv_sel4, sel3, sel2, inv_sel1, inv_sel0, data12);
  and a_13 (w_13, inv_sel4, sel3, sel2, inv_sel1, sel0, data13);
  and a_14 (w_14, inv_sel4, sel3, sel2, sel1, inv_sel0, data14);
  and a_15 (w_15, inv_sel4, sel3, sel2, sel1, sel0, data15);
  and a_16 (w_16, sel4, inv_sel3, inv_sel2, inv_sel1, inv_sel0, data16);
  and a_17 (w_17, sel4, inv_sel3, inv_sel2, inv_sel1, sel0, data17);
  and a_18 (w_18, sel4, inv_sel3, inv_sel2, sel1, inv_sel0, data18);
  and a_19 (w_19, sel4, inv_sel3, inv_sel2, sel1, sel0, data19);
  and a_20 (w_20, sel4, inv_sel3, sel2, inv_sel1, inv_sel0, data20);
  and a_21 (w_21, sel4, inv_sel3, sel2, inv_sel1, sel0, data21);
  and a_22 (w_22, sel4, inv_sel3, sel2, sel1, inv_sel0, data22);
  and a_23 (w_23, sel4, inv_sel3, sel2, sel1, sel0, data23);
  and a_24 (w_24, sel4, sel3, inv_sel2, inv_sel1, inv_sel0, data24);
  and a_25 (w_25, sel4, sel3, inv_sel2, inv_sel1, sel0, data25);
  and a_26 (w_26, sel4, sel3, inv_sel2, sel1, inv_sel0, data26);
  and a_27 (w_27, sel4, sel3, inv_sel2, sel1, sel0, data27);
  and a_28 (w_28, sel4, sel3, sel2, inv_sel1, inv_sel0, data28);
  and a_29 (w_29, sel4, sel3, sel2, inv_sel1, sel0, data29);
  and a_30 (w_30, sel4, sel3, sel2, sel1, inv_sel0, data30);
  and a_31 (w_31, sel4, sel3, sel2, sel1, sel0, data31);
  or org (z, w_0, w_1, w_2, w_3, w_4, w_5, w_6, w_7, w_8, w_9, w_10,
       w_11, w_12, w_13, w_14, w_15, w_16, w_17, w_18, w_19, w_20,
       w_21, w_22, w_23, w_24, w_25, w_26, w_27, w_28, w_29, w_30,
       w_31);
endmodule
`endif // ONE_HOT_MUX
`endif
