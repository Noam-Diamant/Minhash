$date
    Aug  2, 2024  13:53:20
$end
$version
    TOOL:	xmsim(64)	21.09-s007
$end
$timescale
    1 ps
$end

$scope module proj_fm_ram_tb $end
$var parameter 32 !    BUFFER_COUNT $end
$var parameter 32 "    RAMS $end
$var parameter 32 #    ENTRIES $end
$var parameter 32 $    OFFSET $end
$var parameter 32 %    DATA_BITS $end
$var parameter 32 &    READ_BASES_COUNT $end
$var parameter 32 '    INDICE_LEN $end
$var parameter 32 (    SIGNED_INDICE_LEN $end
$var parameter 32 )    FRAG_LEN $end
$var parameter 32 *    FM_BUFFER_SIZE $end
$var reg       2 +    in_wdata [1:0] $end
$var reg       2 ,    data [1:0] $end
$var reg       4 -    out_rdata [3:0] $end
$var reg       1 .    in_clk $end
$var reg       1 /    in_rst_n $end
$var reg       1 0    chg_idx $end
$var reg       4 1    frag_idx [3:0] $end

$scope module dut $end
$var parameter 32 2    BUFFER_COUNT $end
$var parameter 32 3    RAMS $end
$var parameter 32 4    ENTRIES $end
$var parameter 32 5    OFFSET $end
$var parameter 32 6    DATA_BITS $end
$var parameter 32 7    READ_BASES_COUNT $end
$var parameter 32 8    INDICE_LEN $end
$var parameter 32 9    SIGNED_INDICE_LEN $end
$var parameter 32 :    FRAG_LEN $end
$var wire      1 ;    in_clk  $end
$var wire      1 <    in_rst_n  $end
$var wire      2 =    in_wdata [1:0] $end
$var wire      1 >    chg_idx  $end
$var wire      4 ?    frag_idx [3:0] $end
$var wire      4 @    out_rdata [3:0] $end
$var parameter 32 A    FM_BUFFER_SIZE $end
$var parameter 32 B    RAM_ADDR_BITS $end
$var parameter 32 C    ENTRIES_ADDR_BITS $end
$var parameter 32 D    OFFSET_ADDR_BITS $end
$var parameter 32 E    ADDR_BITS $end
$var reg       1 F    clk $end
$var reg       1 G    rst_n $end
$var reg       3 H    waddr [2:0] $end
$var reg       3 I    waddr_next [2:0] $end
$var reg       2 J    wdata [1:0] $end
$var reg      32 K    FMbuffers [31:0] $end
$var reg       1 L    end_addr $end
$var reg       1 M    hold_addr $end
$var reg       1 N    rst_addr $end
$var reg       1 O    wr_idx $end
$var reg       1 P    rd_idx $end
$var reg       4 Q    padded_fragment [3:0] $end
$var reg       3 R    raddr [2:0] $end
$var reg       3 S    zeros_count [2:0] $end
$var reg       4 T    flip_frag_idx [3:0] $end
$var reg       1 U    we $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b11 E
b1 D
b1 C
b1 B
b1000 A
b100 :
b100 9
b11 8
b10 7
b10 6
b10 5
b10 4
b10 3
b10 2
b1000 *
b100 )
b100 (
b11 '
b10 &
b10 %
b10 $
b10 #
b10 "
b10 !
b0 +
bx ,
bx -
0.
0/
00
b0 1
0;
0<
b0 =
0>
b0 ?
bx @
0F
0G
bx H
bx I
b0 J
bx K
xL
xM
0N
xO
xP
bx Q
b0 R
b0 S
b0 T
xU
$end
#5000
1.
1;
1F
0O
b0 H
1P
b0x I
0L
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
b1 I
0M
1U
#10000
1/
0.
0;
1<
0F
1G
#15000
1.
1;
1F
b1 H
bx00 K
b10 I
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
#20000
0.
0;
0F
#25000
1.
b1 +
b1 =
1;
b1 J
1F
b10 H
bx0100 K
b11 I
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
#30000
0.
0;
0F
#35000
1.
b10 +
b10 =
1;
b10 J
1F
b11 H
bx100100 K
b100 I
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
#40000
0.
0;
0F
#45000
1.
b11 +
b11 =
1;
b11 J
1F
b100 H
bx11100100 K
b101 I
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
#50000
0.
0;
0F
#55000
1.
b0 +
b0 =
1;
b0 J
1F
b101 H
bx0011100100 K
b110 I
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
#60000
0.
0;
0F
#65000
1.
b1 +
b1 =
1;
b1 J
1F
b110 H
bx010011100100 K
b111 I
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
#70000
0.
0;
0F
#75000
1.
b10 +
b10 =
1;
b10 J
1F
b111 H
bx10010011100100 K
b0 I
1L
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
1M
#80000
0.
0;
0F
#85000
1.
b11 +
b11 =
1;
b11 J
1F
bx1110010011100100 K
b0 Q
b0x Q
b0xx Q
b0xxx Q
bx Q
#90000
0.
0;
0F
#95000
1.
1;
1F
#100000
0.
0;
0F
#105000
1.
1;
1F
#110000
0.
0;
0F
#115000
1.
1;
1F
#120000
0.
0;
0F
#125000
1.
1;
1F
#130000
0.
10
1>
0;
0M
1N
0F
#135000
1.
1;
1F
1O
b0 H
0P
0L
b0 Q
b100 Q
b1 I
0N
b100 @
b100 -
#140000
0.
00
0>
0;
0F
#145000
1.
b0 ,
b0 +
b0 =
1;
b0 J
1F
b1 H
bx001110010011100100 K
b10 I
b0 Q
b100 Q
#150000
0.
0;
0F
#155000
1.
b1 ,
b1 +
b1 =
1;
b1 J
1F
b10 H
bx01001110010011100100 K
b11 I
b0 Q
b100 Q
#160000
0.
0;
0F
#165000
1.
b10 ,
b10 +
b10 =
1;
b10 J
1F
b11 H
bx1001001110010011100100 K
b100 I
b0 Q
b100 Q
#170000
0.
0;
0F
#175000
1.
b11 ,
b11 +
b11 =
1;
b11 J
1F
b100 H
bx111001001110010011100100 K
b101 I
b0 Q
b100 Q
#180000
0.
0;
0F
#185000
1.
b0 ,
b0 +
b0 =
1;
b0 J
1F
b101 H
bx00111001001110010011100100 K
b110 I
b0 Q
b100 Q
#190000
0.
0;
0F
#195000
1.
b1 ,
b1 +
b1 =
1;
b1 J
1F
b110 H
bx0100111001001110010011100100 K
b111 I
b0 Q
b100 Q
#200000
0.
0;
0F
#205000
1.
b10 ,
b10 +
b10 =
1;
b10 J
1F
b111 H
bx100100111001001110010011100100 K
b0 I
1L
b0 Q
b100 Q
1M
#210000
0.
0;
0F
#215000
1.
b11 ,
b11 +
b11 =
1;
b11 J
1F
b11100100111001001110010011100100 K
b0 Q
b100 Q
#220000
0.
0;
0F
#225000
1.
b100 1
b100 ?
1;
b0 Q
b100 R
b10 Q
b110 Q
b1110 Q
1F
b1110 @
b1110 -
#230000
0.
0;
0F
#235000
1.
b1110 1
b1110 ?
1;
b0 Q
b10 T
b10 S
b0 R
1F
b0 @
b0 -
#240000
0.
0;
0F
#245000
1.
1;
1F
#250000
0.
10
1>
0;
0M
1N
0F
#255000
1.
1;
1F
0O
b0 H
1P
0L
b0 S
b0 T
b10 T
b10 S
b1 I
0N
#260000
0.
00
b0 1
b0 ?
0>
0;
b0 S
b0 T
b100 Q
0F
b100 @
b100 -
#265000
1.
b100 1
b100 ?
1;
b0 Q
b100 R
b10 Q
b110 Q
b1110 Q
1F
b1110 @
b1110 -
b1 H
b11100100111001001110010011100111 K
b10 I
b0 Q
b10 Q
b110 Q
b1110 Q
#270000
0.
0;
0F
#275000
1.
b1110 1
b1110 ?
1;
b0 Q
b10 T
b10 S
b0 R
1F
b0 @
b0 -
b10 H
b11100100111001001110010011101111 K
b11 I
b0 S
b0 T
b10 T
b10 S
#280000
0.
0;
0F
#285000
1.
1;
1F
b11 H
b11100100111001001110010011111111 K
b100 I
b0 S
b0 T
b10 T
b10 S
#290000
0.
10
1>
0;
0F
#295000
1.
1;
1F
1O
b100 H
0P
b101 I
b0 S
b0 T
b10 T
b10 S
b100 Q
b1100 Q
b1100 @
b1100 -
#300000
0.
00
0>
0;
0F
#305000
1.
1;
1F
b101 H
b11100111111001001110010011111111 K
b110 I
b0 Q
b0 S
b0 T
b10 T
b10 S
b100 Q
b1100 Q
#310000
0.
0;
0F
#315000
1.
1;
1F
b110 H
b11101111111001001110010011111111 K
b111 I
b0 Q
b0 S
b0 T
b10 T
b10 S
b100 Q
b1100 Q
#320000
